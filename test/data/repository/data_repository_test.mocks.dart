// Mocks generated by Mockito 5.0.14 from annotations
// in youtube_focus/test/data/repository/data_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:youtube_focus/data/models/search/search_barrel.dart' as _i3;
import 'package:youtube_focus/data/network/data_source.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeSearchResponse_1 extends _i1.Fake implements _i3.SearchResponse {}

/// A class which mocks [DataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataSource extends _i1.Mock implements _i4.DataSource {
  MockDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i5.Future<_i3.SearchResponse> searchVideos(
          {String? query, String? pageToken}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #searchVideos, [], {#query: query, #pageToken: pageToken}),
              returnValue:
                  Future<_i3.SearchResponse>.value(_FakeSearchResponse_1()))
          as _i5.Future<_i3.SearchResponse>);
  @override
  String toString() => super.toString();
}
